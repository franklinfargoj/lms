<?php
/**
 * Created by PhpStorm.
 * User: webwerks
 * Date: 28/5/18
 * Time: 7:47 PM
 */
defined('BASEPATH') OR exit('No direct script access allowed');

class Report1 extends CI_Controller
{
    function __construct()
    {
        // Initialization of class
        parent::__construct();
        is_logged_in();

        $param1 = $this->uri->segment(3,0);
        $admin = ucwords(strtolower($this->session->userdata('admin_type')));
        if ($admin == 'Em'){
            redirect('dashboard');
        }
        if ($admin != 'Super Admin'){
            if($param1 == 'dashboard'){
                redirect('dashboard');
            }
        }

        $this->load->model('Lead');
        $this->load->model('Master_model','Master');
    }



    public function index(){



        if($this->input->post()){
            $arrData['start_date']  = str_replace('-', '-',$this->input->post('start_date'));
            $arrData['end_date']   = str_replace('-', '-',$this->input->post('end_date'));


            $arrData = $this->status_flow($arrData);




            $this->export_to_excel();
        }



        $arrData['breadcrumb'] = $this->make_bread->output();
        $arrData['view'] = null;
        return load_view('Reports/master_status_flow',$arrData);
    }



    private function status_flow($arrData){

        set_time_limit(0);
        ini_set('memory_limit', '-1');
        ini_set('max_execution_time', 1800);
        $login_user = get_session();
        $action = 'list';
        $select = array('l.id','l.customer_name','l.lead_source','l.contact_no','l.created_by_branch_id',
            'l.created_on AS generated_on','l.reroute_from_branch_id','l.modified_on','l.branch_id','l.zone_id','l.created_by_name as generated',
            'l.opened_account_no','l.created_by_zone_id','l.lead_identification','l.created_by as created_by_hrms_id','l.lead_ticket_range',
            'p.title as product','pc.title as product_category','l.opened_account_no','rfc.amount','la.employee_id','la.employee_name','la.branch_id as assignee_branch',
            'la.created_by_name','la.modified_on AS date','la.status','la.modified_by','la.modified_by_name','la.reason_for_drop');
        $table = Tbl_Leads.' as l';
        $where  = array();
        $join = array();
        $join[] = array('table' => Tbl_Products.' as p','on_condition' => 'l.product_id = p.id','type' => '');
        $join[] = array('table' => Tbl_Category.' as pc','on_condition' => 'l.product_category_id = pc.id','type' => '');
        $join[] = array('table' => Tbl_cbs.' as rfc','on_condition' => 'l.id = rfc.lead_id','type' => 'left');
        $join[] = array('table' => Tbl_LeadAssign.' as la','on_condition' => 'l.id = la.lead_id','type' => 'left');

        //If Start date selected
        if(!empty($arrData['start_date'])){
            $where['DATE_FORMAT(l.created_on,"%Y-%m-%d") >='] = date('Y-m-d',strtotime($arrData['start_date']));
        }
        //If End date selected
        if(!empty($arrData['end_date'])){
            $where['DATE_FORMAT(l.created_on,"%Y-%m-%d") <='] = date('Y-m-d',strtotime($arrData['end_date']));
        }

        $order_by = 'l.created_on DESC';

        $arrData['generated_leads'] = $this->Lead->listMasters($action,$table,$select,$where,$join,$group_by=array(),$order_by);




        $lstArray = array();
        foreach($arrData['generated_leads'] as $data){

            $lstArray[$data['id']][] = $data;

        }
        $this->export_to_excel($lstArray);
    }


    private function export_to_excel($data){


        $this->load->library('excel');
        $file_name = 'Master_report-'.date('d-m-Y').'-'.time().'data.xls';
        $excel_alpha = unserialize(EXCEL_ALPHA);

        $header_value = array('Sr. No.','Lead Id','Customer Name','Contact Number','Product Category',
            'Product','Ticket Size','Lead Source','Lead Generation Date','Lead Generated By','Designation of Lead Generated By',
            'Lead Generation Branch ID','Lead Generation Branch Name','Lead Generation Zone Name','Current Location of Lead','Current Zone of Lead',
            'HRMS ID of Lead Generator','Lead Assignment Date(1)','Lead Assigned To (1)','Lead Assigned to HRMS ID (1)','Lead Assigned To Branch ID (1)','Lead Assigned To Branch Name (1)',
            'Lead Assignment Date(2)','Lead Assigned To (2)','Lead Assigned to HRMS ID (2)','Lead Assigned To Branch ID (2)','Lead Assigned To Branch Name (2)',
            'Lead Marked as Interested Date','Lead Marked as Interested By','Lead Marked as Interested By HRMS ID','Lead Identified As',
            'Lead Marked as Documents Collected Date','Lead Marked as Documents Collected By','Lead Marked as Documents Collected By HRMS ID',
            'Lead Marked as Account Opened Date','Lead Marked as Account Opened By','Lead Marked as Account Opened By HRMS ID','Lead marked as Drop/Not Interested Date',
            'Lead marked as Drop/Not Interested By','Lead marked as Drop/Not Interested By HRMS ID','Reason for Drop','Lead Marked as Converted Date',
            'Lead Marked as Converted By','Lead Marked as Converted By HRMS ID','Account Number of lead converted',
            'Account Balance of Lead Converted','Lead marked as Reject Date','Lead marked as Reject By','Lead marked as Reject By HRMS ID',
            'Status');


        $objPHPExcel = $this->excel;
        $objPHPExcel->getDefaultStyle()->getFont()->setName('Calibri');
        $objPHPExcel->getDefaultStyle()->getFont()->setSize(11);
        $objPHPExcel->getDefaultStyle()->getFont()->setBold(false);
        $objPHPExcel->getDefaultStyle()
            ->getAlignment()
            ->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        $styleArray = array(
            'borders' => array(
                'allborders' => array(
                    'style' => PHPExcel_Style_Border::BORDER_THIN
                )
            )
        );
        $fontArray = array(
            'font'  => array(
                'bold'  => false,
                'size'  => 22
            ));
        $textfontArray = array(
            'font'  => array(
                'bold'  => false,
                'size'  => 11
            ));
        $text_bold_false = array(
            'font'  => array(
                'bold'  => false,
                'size'  => 11
            ));
        $fileType = 'Excel5';
        $time = time();
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, "Excel5");

        foreach ($header_value as $key=>$value ){
            $objPHPExcel->getActiveSheet()->getColumnDimension($excel_alpha[$key])->setAutoSize(true);
        }

        $objSheet = $objPHPExcel->getActiveSheet();
        $objPHPExcel->getActiveSheet()->getRowDimension(1)->setRowHeight(-1);

        foreach ($header_value as $key => $value){
            $objSheet->getStyle($excel_alpha[$key].'1')
                ->getAlignment()
                ->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

            $objSheet->getCell($excel_alpha[$key].'1')->setValue($value);
        }

//        $designation_by_hrms_id = array();
        $designationByHrmsId = designation_by_hrms_id_key_value();
        $branchNameByKeyValue = branchNameKeyValue();
        $zoneNameByKeyValue = zonenameKeyValue();
        $zoneIdKeyValue = zoneIdKeyValue();


        $j = 1;$i=2;
        foreach($data as $key => $value){
            $count  = count($value);

//            foreach ($header_value as $k => $v) {
//                $objSheet->getStyle($excel_alpha[$k] . $i)
//                    ->getAlignment()
//                    ->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
//                $objSheet->getStyle($excel_alpha[$k] . ($i))->applyFromArray($text_bold_false);
//            }

            $objSheet->getCell($excel_alpha[0] . $i)->setValue($j);
            $objSheet->getCell($excel_alpha[1] . $i)->setValue(ucwords($value[0]['id']));
            $objSheet->getCell($excel_alpha[2] . $i)->setValue(ucwords($value[0]['customer_name']));
            $objSheet->getCell($excel_alpha[3] . $i)->setValue(ucwords($value[0]['contact_no']));
            $objSheet->getCell($excel_alpha[4] . $i)->setValue(ucwords($value[0]['product_category']));
            $objSheet->getCell($excel_alpha[5] . $i)->setValue(ucwords($value[0]['product']));
            $objSheet->getCell($excel_alpha[6] . $i)->setValue(ucwords($value[0]['id']));
            $objSheet->getCell($excel_alpha[7] . $i)->setValue(ucwords($value[0]['lead_source']));
            $objSheet->getCell($excel_alpha[8] . $i)->setValue(ucwords($value[0]['generated_on']));
            $objSheet->getCell($excel_alpha[9] . $i)->setValue(ucwords($value[0]['generated']));

            if(array_key_exists($value[0]['created_by_hrms_id'],$designationByHrmsId)){
               $designation = $designationByHrmsId[$value[0]['created_by_hrms_id']];
            }else{
                $designation = "";
            }
            $objSheet->getCell($excel_alpha[10] . $i)->setValue(ucwords($designation));//its from helper
            $objSheet->getCell($excel_alpha[11] . $i)->setValue(ucwords($value[0]['created_by_branch_id']));

            if(array_key_exists($value[0]['created_by_branch_id'],$branchNameByKeyValue)){
                $branchName1 = $branchNameByKeyValue[$value[0]['created_by_branch_id']];
            }else{
                $branchName1 = "";
            }
            $objSheet->getCell($excel_alpha[12] . $i)->setValue(ucwords($branchName1));

            if(array_key_exists($value[0]['created_by_zone_id'],$zoneNameByKeyValue)){
                $zoneName1 = $zoneNameByKeyValue[$value[0]['created_by_zone_id']];
            }else{
                $zoneName1 = "";
            }
            $objSheet->getCell($excel_alpha[13] . $i)->setValue(ucwords($zoneName1));

            if(array_key_exists($value[0]['branch_id'],$branchNameByKeyValue)){
                $branchName2 = $branchNameByKeyValue[$value[0]['branch_id']];
            }else{
                $branchName2 = "";
            }
            $objSheet->getCell($excel_alpha[14] . $i)->setValue(ucwords($branchName2));

            $objSheet->getCell($excel_alpha[16] . $i)->setValue(ucwords($value[$key]['created_by_hrms_id']));

            if(array_key_exists($value[0]['branch_id'],$zoneIdKeyValue)){
                $currentZoneId = $zoneIdKeyValue[$value[0]['branch_id']];
            }else{
                $currentZoneId = "";
            }
            if(array_key_exists($currentZoneId,$zoneNameByKeyValue)){
                $zoneName2 = $zoneNameByKeyValue[$currentZoneId];
            }else{
                $zoneName2 = "";
            }
            $objSheet->getCell($excel_alpha[15] . $i)->setValue(ucwords($zoneName2));
            $objSheet->getCell($excel_alpha[49] . $i)->setValue(ucwords('Unassigned'));

            if($count > 1){
                $lead_type = $this->config->item('lead_type');
                foreach($value as $index => $val){
                    if($index == 0){
                        continue;
                    }

                    if(isset($value[0]['reroute_from_branch_id'])) {
                        if ($val['status'] == 'NC' && $val['assignee_branch'] == $value[0]['reroute_from_branch_id']) {
                            $objSheet->getCell($excel_alpha[17] . $i)->setValue(ucwords($val['date']));
                            $objSheet->getCell($excel_alpha[18] . $i)->setValue(ucwords($val['employee_name']));
                            $objSheet->getCell($excel_alpha[19] . $i)->setValue(ucwords($val['employee_id']));
                            $objSheet->getCell($excel_alpha[20] . $i)->setValue(ucwords($value[0]['reroute_from_branch_id']));
                            if(array_key_exists($value[0]['reroute_from_branch_id'],$branchNameByKeyValue)){
                                $reRoutedBranchName1 = $branchNameByKeyValue[$value[0]['reroute_from_branch_id']];
                            }else{
                                $reRoutedBranchName1 = "";
                            }
                            $objSheet->getCell($excel_alpha[21] . $i)->setValue(ucwords($reRoutedBranchName1));
                        }

                        if ($value[$key]['status'] == 'NC' && $value[$key]['assignee_branch'] == $value[0]['branch_id']) {
                            $objSheet->getCell($excel_alpha[22] . $i)->setValue(ucwords($value[$key]['date']));
                            $objSheet->getCell($excel_alpha[23] . $i)->setValue(ucwords($value[$key]['employee_name']));
                            $objSheet->getCell($excel_alpha[24] . $i)->setValue(ucwords($value[$key]['employee_id']));
                            $objSheet->getCell($excel_alpha[25] . $i)->setValue(ucwords($value[0]['branch_id']));
                            $objSheet->getCell($excel_alpha[26] . $i)->setValue(ucwords($branchName2));
                        }

                    }else{
                        $objSheet->getCell($excel_alpha[17] . $i)->setValue(ucwords($val['date']));
                        $objSheet->getCell($excel_alpha[18] . $i)->setValue(ucwords($val['employee_name']));
                        $objSheet->getCell($excel_alpha[19] . $i)->setValue(ucwords($val['employee_id']));
                        $objSheet->getCell($excel_alpha[20] . $i)->setValue(ucwords($value[0]['branch_id']));
                        $objSheet->getCell($excel_alpha[21] . $i)->setValue(ucwords($branchName2));

                    }

                    if($val['status'] == 'FU'){
                        $objSheet->getCell($excel_alpha[27] . $i)->setValue(ucwords($val['date']));
                        $objSheet->getCell($excel_alpha[28] . $i)->setValue(ucwords($val['modified_by_name']));
                        $objSheet->getCell($excel_alpha[29] . $i)->setValue(ucwords($val['modified_by']));
                        $objSheet->getCell($excel_alpha[30] . $i)->setValue(ucwords($lead_type[$value[0]['lead_identification']]));
                    }

                    if($val['status'] == 'DC'){
                        $objSheet->getCell($excel_alpha[31] . $i)->setValue(ucwords($val['date']));
                        $objSheet->getCell($excel_alpha[32] . $i)->setValue(ucwords($val['modified_by_name']));
                        $objSheet->getCell($excel_alpha[33] . $i)->setValue(ucwords($val['modified_by']));
                    }

                    if($val['status'] == 'AO'){
                        $objSheet->getCell($excel_alpha[34] . $i)->setValue(ucwords($val['date']));
                        $objSheet->getCell($excel_alpha[35] . $i)->setValue(ucwords($val['modified_by_name']));
                        $objSheet->getCell($excel_alpha[36] . $i)->setValue(ucwords($val['modified_by']));
                        $objSheet->getCell($excel_alpha[44] . $i)->setValue(ucwords($value[0]['opened_account_no']));
                        $objSheet->getCell($excel_alpha[45] . $i)->setValue(ucwords($value[0]['amount']));
                    }

                    if($val['status'] == 'NI'){
                        $objSheet->getCell($excel_alpha[37] . $i)->setValue(ucwords($val['date']));
                        $objSheet->getCell($excel_alpha[38] . $i)->setValue(ucwords($val['modified_by_name']));
                        $objSheet->getCell($excel_alpha[39] . $i)->setValue(ucwords($val['modified_by']));
                        $objSheet->getCell($excel_alpha[40] . $i)->setValue(ucwords($val['reason_for_drop']));
                    }

                    if($val['status'] == 'Converted'){
                        $objSheet->getCell($excel_alpha[41] . $i)->setValue(ucwords($val['date']));
                        $objSheet->getCell($excel_alpha[42] . $i)->setValue(ucwords($val['modified_by_name']));
                        $objSheet->getCell($excel_alpha[43] . $i)->setValue(ucwords($val['modified_by']));
                    }

                    if($val['status'] == 'Closed'){
                        $objSheet->getCell($excel_alpha[46] . $i)->setValue(ucwords($val['date']));
                        $objSheet->getCell($excel_alpha[47] . $i)->setValue(ucwords($val['modified_by_name']));
                        $objSheet->getCell($excel_alpha[48] . $i)->setValue(ucwords($val['modified_by']));
                    }
                    $objSheet->getCell($excel_alpha[49] . $i)->setValue(ucwords('Assigned'));

                }
            }


            $j++;
            $i++;
//            exit;
        }


        make_upload_directory('uploads');
        make_upload_directory('uploads/excel_list');
        //echo $file_name;die;
        header('Content-Type: application/vnd.ms-excel'); //mime type
        header('Content-Disposition: attachment;filename="'.$file_name.'"');
        //tell browser what's the file name
        header('Cache-Control: max-age=0'); //no cache
        $objWriter->save('php://output');


    }


}